// Mocks generated by Mockito 5.4.0 from annotations
// in field/test/domain/use_cases/auth/login_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:field/data/model/user_vo.dart' as _i5;
import 'package:field/domain/use_cases/login/login_usecase.dart' as _i2;
import 'package:field/networking/network_response.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LoginUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUseCase extends _i1.Mock implements _i2.LoginUseCase {
  MockLoginUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<dynamic>?>? doLogin(Map<String, dynamic>? request) =>
      (super.noSuchMethod(Invocation.method(
        #doLogin,
        [request],
      )) as _i3.Future<_i4.Result<dynamic>?>?);
  @override
  _i3.Future<void> getLanguageList() => (super.noSuchMethod(
        Invocation.method(
          #getLanguageList,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<_i4.Result<dynamic>?>? getUserSSODetails(
          Map<String, dynamic>? request) =>
      (super.noSuchMethod(Invocation.method(
        #getUserSSODetails,
        [request],
      )) as _i3.Future<_i4.Result<dynamic>?>?);
  @override
  _i3.Future<_i4.Result<dynamic>?>? login2FA(Map<String, dynamic>? request) =>
      (super.noSuchMethod(Invocation.method(
        #login2FA,
        [request],
      )) as _i3.Future<_i4.Result<dynamic>?>?);
  @override
  _i3.Future<List<_i5.User>> getExistingUsers() => (super.noSuchMethod(
        Invocation.method(
          #getExistingUsers,
          [],
        ),
        returnValue: _i3.Future<List<_i5.User>>.value(<_i5.User>[]),
      ) as _i3.Future<List<_i5.User>>);
  @override
  _i3.Future<_i4.Result<dynamic>?>? doSetPasswordReqest(
          Map<String, dynamic>? request) =>
      (super.noSuchMethod(Invocation.method(
        #doSetPasswordReqest,
        [request],
      )) as _i3.Future<_i4.Result<dynamic>?>?);
  @override
  _i3.Future<_i4.Result<dynamic>?>? doRestSetPassword(
          Map<String, dynamic>? request) =>
      (super.noSuchMethod(Invocation.method(
        #doRestSetPassword,
        [request],
      )) as _i3.Future<_i4.Result<dynamic>?>?);
  @override
  _i3.Future<_i4.Result<dynamic>?> getProjectHash(
          Map<String, dynamic>? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProjectHash,
          [request],
        ),
        returnValue: _i3.Future<_i4.Result<dynamic>?>.value(),
      ) as _i3.Future<_i4.Result<dynamic>?>);
  @override
  _i3.Future<bool?> checkIfProjectSelected() => (super.noSuchMethod(
        Invocation.method(
          #checkIfProjectSelected,
          [],
        ),
        returnValue: _i3.Future<bool?>.value(),
      ) as _i3.Future<bool?>);
  @override
  _i3.Future<_i4.Result<dynamic>?> registerDeviceToServer() =>
      (super.noSuchMethod(
        Invocation.method(
          #registerDeviceToServer,
          [],
        ),
        returnValue: _i3.Future<_i4.Result<dynamic>?>.value(),
      ) as _i3.Future<_i4.Result<dynamic>?>);
}
