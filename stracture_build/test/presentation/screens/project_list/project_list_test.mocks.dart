// Mocks generated by Mockito 5.4.0 from annotations
// in field/test/presentation/screens/project_list/project_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:field/bloc/navigation/navigation_cubit.dart' as _i10;
import 'package:field/bloc/project_list/project_list_cubit.dart' as _i3;
import 'package:field/data/model/popupdata_vo.dart' as _i4;
import 'package:field/data/model/project_vo.dart' as _i5;
import 'package:field/presentation/base/state_renderer/state_render_impl.dart'
    as _i2;
import 'package:field/utils/field_enums.dart' as _i8;
import 'package:field/utils/utils.dart' as _i7;
import 'package:flutter_bloc/flutter_bloc.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFlowState_0 extends _i1.SmartFake implements _i2.FlowState {
  _FakeFlowState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProjectListCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockProjectListCubit extends _i1.Mock implements _i3.ProjectListCubit {
  MockProjectListCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.Popupdata> get allItems => (super.noSuchMethod(
        Invocation.getter(#allItems),
        returnValue: <_i4.Popupdata>[],
      ) as List<_i4.Popupdata>);
  @override
  set allItems(List<_i4.Popupdata>? _allItems) => super.noSuchMethod(
        Invocation.setter(
          #allItems,
          _allItems,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i4.Popupdata> get favItems => (super.noSuchMethod(
        Invocation.getter(#favItems),
        returnValue: <_i4.Popupdata>[],
      ) as List<_i4.Popupdata>);
  @override
  set favItems(List<_i4.Popupdata>? _favItems) => super.noSuchMethod(
        Invocation.setter(
          #favItems,
          _favItems,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i4.Popupdata> get recentList => (super.noSuchMethod(
        Invocation.getter(#recentList),
        returnValue: <_i4.Popupdata>[],
      ) as List<_i4.Popupdata>);
  @override
  set recentList(List<_i4.Popupdata>? _recentList) => super.noSuchMethod(
        Invocation.setter(
          #recentList,
          _recentList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isAscending => (super.noSuchMethod(
        Invocation.getter(#isAscending),
        returnValue: false,
      ) as bool);
  @override
  set isAscending(bool? _isAscending) => super.noSuchMethod(
        Invocation.setter(
          #isAscending,
          _isAscending,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavAscending => (super.noSuchMethod(
        Invocation.getter(#isFavAscending),
        returnValue: false,
      ) as bool);
  @override
  set isFavAscending(bool? _isFavAscending) => super.noSuchMethod(
        Invocation.setter(
          #isFavAscending,
          _isFavAscending,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get projectPageLimit => (super.noSuchMethod(
        Invocation.getter(#projectPageLimit),
        returnValue: 0,
      ) as int);
  @override
  bool get isLastItem => (super.noSuchMethod(
        Invocation.getter(#isLastItem),
        returnValue: false,
      ) as bool);
  @override
  set isLastItem(bool? _isLastItem) => super.noSuchMethod(
        Invocation.setter(
          #isLastItem,
          _isLastItem,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavLastItem => (super.noSuchMethod(
        Invocation.getter(#isFavLastItem),
        returnValue: false,
      ) as bool);
  @override
  set isFavLastItem(bool? _isFavLastItem) => super.noSuchMethod(
        Invocation.setter(
          #isFavLastItem,
          _isFavLastItem,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set syncProjectId(String? _syncProjectId) => super.noSuchMethod(
        Invocation.setter(
          #syncProjectId,
          _syncProjectId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set selectedProject(_i5.Project? _selectedProject) => super.noSuchMethod(
        Invocation.setter(
          #selectedProject,
          _selectedProject,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set projectDownloadSize(String? _projectDownloadSize) => super.noSuchMethod(
        Invocation.setter(
          #projectDownloadSize,
          _projectDownloadSize,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set setSearchMode(_i3.SearchMode? mode) => super.noSuchMethod(
        Invocation.setter(
          #setSearchMode,
          mode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.FlowState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeFlowState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.FlowState);
  @override
  _i6.Stream<_i2.FlowState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<_i2.FlowState>.empty(),
      ) as _i6.Stream<_i2.FlowState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i6.Future<_i5.Project?> getProjectDetailQr(String? projectId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProjectDetailQr,
          [projectId],
        ),
        returnValue: _i6.Future<_i5.Project?>.value(),
      ) as _i6.Future<_i5.Project?>);
  @override
  _i6.Future<void> getProjectDetail(
    _i4.Popupdata? project,
    bool? isFavourites, {
    _i7.FromScreen? fromScreen,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProjectDetail,
          [
            project,
            isFavourites,
          ],
          {#fromScreen: fromScreen},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  dynamic showSyncProgress(
    int? progress,
    String? projectId,
    _i8.ESyncStatus? status,
  ) =>
      super.noSuchMethod(Invocation.method(
        #showSyncProgress,
        [
          progress,
          projectId,
          status,
        ],
      ));
  @override
  _i6.Future<bool> isProjectMarkedOffline() => (super.noSuchMethod(
        Invocation.method(
          #isProjectMarkedOffline,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<List<_i4.Popupdata>> pageFetch(
    int? offset,
    bool? isFavourite,
    bool? isRefreshing,
    String? searchValue,
    bool? isAsc,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #pageFetch,
          [
            offset,
            isFavourite,
            isRefreshing,
            searchValue,
            isAsc,
          ],
        ),
        returnValue: _i6.Future<List<_i4.Popupdata>>.value(<_i4.Popupdata>[]),
      ) as _i6.Future<List<_i4.Popupdata>>);
  @override
  _i6.Future<List<_i4.Popupdata>> getSuggestedSearchList(
    int? offset,
    bool? isFavourite,
    bool? isRefreshing,
    String? searchValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuggestedSearchList,
          [
            offset,
            isFavourite,
            isRefreshing,
            searchValue,
          ],
        ),
        returnValue: _i6.Future<List<_i4.Popupdata>>.value(<_i4.Popupdata>[]),
      ) as _i6.Future<List<_i4.Popupdata>>);
  @override
  dynamic setNavigationTitleHeader(_i5.Project? projectVO) =>
      super.noSuchMethod(Invocation.method(
        #setNavigationTitleHeader,
        [projectVO],
      ));
  @override
  _i6.Future<void> favProject(
    _i4.Popupdata? project,
    int? isFav,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #favProject,
          [
            project,
            isFav,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> favouriteProject(
    _i4.Popupdata? project,
    int? imgId,
    bool? isFav,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #favouriteProject,
          [
            project,
            imgId,
            isFav,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  void addUpdateFavouriteDataList(
    _i4.Popupdata? project,
    int? imgId,
    bool? isFav,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addUpdateFavouriteDataList,
          [
            project,
            imgId,
            isFav,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> getRequestMapDataForProject(dynamic projectID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestMapDataForProject,
          [projectID],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, dynamic> getRequestMapData(
    dynamic page,
    dynamic limit,
    dynamic isFavourite,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestMapData,
          [
            page,
            limit,
            isFavourite,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, dynamic> getRequestMapDataForPopup(
    dynamic page,
    dynamic limit,
    dynamic isFavourite,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestMapDataForPopup,
          [
            page,
            limit,
            isFavourite,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, dynamic> getRequestMapDataForPopupPagination(
    dynamic page,
    dynamic limit,
    dynamic isFavourite,
    dynamic searchValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestMapDataForPopupPagination,
          [
            page,
            limit,
            isFavourite,
            searchValue,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, dynamic> getFavouriteProjectMapData(
    _i4.Popupdata? project,
    int? isFav,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavouriteProjectMapData,
          [
            project,
            isFav,
          ],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i6.Future<void> addRecentProject({String? newSearch}) => (super.noSuchMethod(
        Invocation.method(
          #addRecentProject,
          [],
          {#newSearch: newSearch},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<List<_i4.Popupdata>> getRecentProject() => (super.noSuchMethod(
        Invocation.method(
          #getRecentProject,
          [],
        ),
        returnValue: _i6.Future<List<_i4.Popupdata>>.value(<_i4.Popupdata>[]),
      ) as _i6.Future<List<_i4.Popupdata>>);
  @override
  _i6.Future<bool> isProjectLocationMarkedOffline(bool? isNetWorkConnected) =>
      (super.noSuchMethod(
        Invocation.method(
          #isProjectLocationMarkedOffline,
          [isNetWorkConnected],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  dynamic deleteProjectSyncSize(String? projectId) =>
      super.noSuchMethod(Invocation.method(
        #deleteProjectSyncSize,
        [projectId],
      ));
  @override
  _i6.Future<bool> checkIfProjectSelected() => (super.noSuchMethod(
        Invocation.method(
          #checkIfProjectSelected,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  dynamic emitState(_i2.FlowState? state) =>
      super.noSuchMethod(Invocation.method(
        #emitState,
        [state],
      ));
  @override
  dynamic emitStateWithDuration(
    _i2.FlowState? state,
    Duration? duration,
  ) =>
      super.noSuchMethod(Invocation.method(
        #emitStateWithDuration,
        [
          state,
          duration,
        ],
      ));
  @override
  void emit(_i2.FlowState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i9.Change<_i2.FlowState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  void updateTitle(
    String? title,
    _i10.NavigationMenuItemType? navigationMenuItemType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateTitle,
          [
            title,
            navigationMenuItemType,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
